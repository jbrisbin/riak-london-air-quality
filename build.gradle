buildscript {
  repositories {
    maven { url "http://repo.spring.io/milestone" }
    jcenter()
  }

  dependencies {
    classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.3.0.RC1',
              'io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE'
  }
}

group = 'com.github.jbrisbin.londonair'
description = 'London Air Quality Ingest into Riak'

ext {
  gradleVersion = '2.8'
  gradleScriptDir = "${rootProject.projectDir}/gradle"

  // Logging
  slf4jVersion = '1.7.12'
  logbackVersion = '1.1.3'

  // Jackson JSON
  jacksonVersion = '2.2.2'

  // Riak
  riakClientVersion = '2.0.3-timeseries-beta-2-SNAPSHOT'

  // Reactor
  reactorVersion = '2.1.0.BUILD-SNAPSHOT'

  // Testing
  spockVersion = '0.7-groovy-2.0'
}

subprojects { project ->
  apply plugin: 'java'
  apply plugin: 'maven'
  apply plugin: 'io.spring.dependency-management'
  apply plugin: 'spring-boot'

  [compileJava]*.options*.compilerArgs = [
      "-Xlint:varargs",
      "-Xlint:cast",
      "-Xlint:classfile",
      "-Xlint:dep-ann",
      "-Xlint:divzero",
      "-Xlint:empty",
      "-Xlint:finally",
      "-Xlint:overrides",
      "-Xlint:path",
      "-Xlint:processing",
      "-Xlint:static",
      "-Xlint:try",
      "-Xlint:deprecation",
      "-Xlint:unchecked",
      "-Xlint:-serial",      // intentionally disabled
      "-Xlint:-options",     // intentionally disabled
      "-Xlint:-fallthrough", // intentionally disabled
      "-Xlint:-rawtypes"     // TODO enable and fix warnings
  ]

  if (JavaVersion.current().isJava8Compatible()) {
    compileTestJava.options.compilerArgs += "-parameters"
    tasks.withType(Javadoc) {
      options.addStringOption('Xdoclint:none', '-quiet')
    }
  }

  compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
  }

  compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
  }

  task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  artifacts {
    archives sourcesJar
  }

  dependencyManagement {
    imports {
      mavenBom 'org.springframework.cloud:spring-cloud-stream-parent:1.0.0.M2'
    }
  }

  repositories {
    //mavenLocal()
    maven { url 'http://ec2-52-26-218-113.us-west-2.compute.amazonaws.com:9080/artifactory/libs-snapshot' }
    maven { url 'http://repo.spring.io/snapshot' }
    jcenter()
  }

  dependencies {
    // SLF4J Logging
    compile "org.slf4j:slf4j-api:$slf4jVersion"

    // Spring Cloud
    compile 'org.springframework.cloud:spring-cloud-starter-stream-kafka'

    // Riak
    compile "com.basho.riak:riak-client:$riakClientVersion"

    // Libraries
    compile "io.projectreactor:reactor-core:$reactorVersion",
            "io.projectreactor:reactor-stream:$reactorVersion",
            "com.jayway.jsonpath:json-path:2.0.0",
            "joda-time:joda-time:2.8.2"

    // Testing
    testCompile "org.spockframework:spock-core:$spockVersion",
                "org.hamcrest:hamcrest-library:1.3",
                "org.springframework.boot:spring-boot-starter-test"
    testRuntime "org.slf4j:jcl-over-slf4j:$slf4jVersion",
                "ch.qos.logback:logback-classic:$logbackVersion"
  }
}

project(':londonair-common') {
  description = 'London Air Quality Ingestion Common'

  dependencies {
  }
}

project(':londonair-consume') {
  description = 'London Air Quality Ingestion Consumer'

  dependencies {
    compile project(':londonair-common')
  }
}

project(':londonair-enrich') {
  description = 'London Air Quality Ingestion Enricher'

  dependencies {
    compile project(':londonair-common')
  }
}

project(':londonair-ingest') {
  description = 'London Air Quality Ingestion Ingester'

  dependencies {
    compile project(':londonair-common')

    // Reactor Net
    compile "io.projectreactor:reactor-net:$reactorVersion"
  }
}

task wrapper(type: Wrapper, description: "Create a Gradle self-download wrapper") {
  group = 'Project Setup'
  gradleVersion = "$gradleVersion"
}
